//----------------------------------------------------------------------------
//  Project owltst1
//  My Copmany
//  Copyright 1998. All right reserved.
//
//  SUBSYSTEM:    owltst1 Application
//  FILE:         owltst1app.h
//  AUTHOR:       Author
//
//  OVERVIEW
//  ~~~~~~~~
//  Class definition for Towltst1Appl (TApplication).
//  (Generated by OWL 6.0 Wizard for VC.)
//----------------------------------------------------------------------------
#if !defined(owltst1app_h)              // Sentry, use file only if it's not already included.
#define owltst1app_h


#include <owl/opensave.h>
#include <owl/template.h>
#include <owl/framewin.h>


#include "resource.h"            // Definition of all resources.
#include "resrc1.h"

class Towltst1View;

class TWindowsThread: public TThread{
	public:
		TWindowsThread(Towltst1View* parent);
		virtual ~TWindowsThread(){}
		virtual void Terminate();

		void		UpdateBoundary();
    bool		ShouldTerminate() const;

		Towltst1View*		Parent;
		TEventSemaphore	EventWait;
		TRect Border;
};

class TBallThread: public TWindowsThread{
	public:
		TBallThread(Towltst1View* parent);
		~TBallThread();
		
		virtual int Run();

	TRect		Position;
	TSize		Velocity;
	TBrush* Brush;
};

class TRectThread: public TWindowsThread{
	public:
		TRectThread(Towltst1View* parent);
		~TRectThread();
		
		virtual int Run();

		TRect		Position;
		TSize		Velocity;
		TBrush* Brush;
};

class TLineThread: public TWindowsThread{
	public:
		TLineThread(Towltst1View* parent);
		~TLineThread();
		
		virtual int Run();
		
		TPoint	Position1;
		TPoint	Position2;
		TSize		Velocity1;
		TSize		Velocity2;
		TPen*		Pen;
};

//
class Towltst1View : public TWindow {
  public:
    Towltst1View(TWindow* parent, LPCTSTR title, TModule* module = 0);
    ~Towltst1View();

		void SetupWindow();
		void CleanupWindow();
	
		void SetTitles();

		void CmNewBall();
		void CmNewRectangle();
		void CmNewLine();

		void CmNew10Balls();
		void CmNew10Lines();
		void CmNew10Rectangles();
	
		void CmNew25Balls();
		void CmNew25Rectangles();
		void CmNew25Lines();

		void CmKillThreads();
		void CmKillThreadsSlow();

    void EvSize(uint sizeType, TSize& size);

		TDC& GetDC() { return *DC;}
		TCriticalSection& GetDCLock() { return DCLock;}

		TDC*							DC;
		TCriticalSection	DCLock;

		TIPtrArray<TWindowsThread*>	Threads;

		DECLARE_RESPONSE_TABLE(Towltst1View);
};    //{{TSDIDecFrame}}

//
// FrameWindow must be derived to override Paint for Preview and Print.
//
//{{TDecoratedFrame = TSDIDecFrame}}
class TSDIFrame : public TFrameWindow {
  public:
    TSDIFrame(TWindow* parent, LPCTSTR title, TWindow* clientWnd, TModule* module = 0);
    ~TSDIFrame();
};    //{{TSDIDecFrame}}

//{{TApplication = Towltst1Appl}}
class Towltst1Appl : public TApplication {
  private:

  public:
    Towltst1Appl();
    virtual ~Towltst1Appl();

//{{Towltst1ApplVIRTUAL_BEGIN}}
  public:
    virtual void InitMainWindow();
//{{Towltst1ApplVIRTUAL_END}}

//{{Towltst1ApplRSP_TBL_BEGIN}}
  protected:
//{{Towltst1ApplRSP_TBL_END}}
DECLARE_RESPONSE_TABLE(Towltst1Appl);
};    //{{Towltst1Appl}}


#endif  // owltst1app_h sentry.

