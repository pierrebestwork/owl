//----------------------------------------------------------------------------
//  Project address
//  Some Company
//  Copyright 2000. All Rights reserved.
//
//  SUBSYSTEM:    address Application
//  FILE:         dbcursor.h
//  AUTHOR:       Author
//
//  OVERVIEW
//  ~~~~~~~~
//  Source file for implementation of TDBCursor.
//  (Generated by OWL 6.x Class Expert for MS VC++, Version 1.5)
//----------------------------------------------------------------------------
#include <owlfx/pch.h>
#pragma hdrstop

#include <owlfx/abase.h>

_OWLFX_BEGIN_NAMESPACE

__OWL_USING_NAMESPACE

TDBDataLink::TDBDataLink()
{
}
//
TDBDataLink::~TDBDataLink()
{
}
//
void TDBDataLink::Register(TDBaseEvent* event)
{
#if defined(BI_STD_RTL)
	for(TDBaseEvents::iterator itr = Events.begin(); itr != Events.end(); itr++){
		if(*itr == event)
			return;
	}
	Events.push_back(event);
#else
	int index = Events.Find(event);
	if(index == (int)NPOS)
		Events.Add(event);
#endif
}
//
void TDBDataLink::Unregister(TDBaseEvent* event)
{
#if defined(BI_STD_RTL)
	for(TDBaseEvents::iterator itr = Events.begin(); itr != Events.end(); itr++){
		if(*itr == event){
			Events.erase(itr);
			break;
		}
	}
#else
	Events.DetachItem(event);
#endif
}
//
void TDBDataLink::ForEach(TDBaseEvent::TType type, long p1, long p2)
{
#if defined(BI_STD_RTL)
	for(TDBaseEvents::iterator itr = Events.begin(); itr != Events.end(); itr++)
		(*itr)->FireEvent(type, p1, p2);
#else
	for(int i = 0; i < (int)Events.Size(); i++)
		Events[i]->FireEvent(type, p1, p2);
#endif
}
//
_OWLFX_END_NAMESPACE
